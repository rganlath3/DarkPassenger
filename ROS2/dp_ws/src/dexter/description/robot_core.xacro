<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- Made by Ranil Ganlath: ranil.ganlath@gmail.com -->
<!-- This is the main urdf script for the Dark Passenger Payload mounted on a roomba chassis -->

  <!-- This makes inertia estimates easier -->
    <xacro:include filename="inertial_macros.xacro"/>

  <!-- Material Colors -->
    <material name="orange">
        <color rgba="${255/255} ${108/255} ${10/255} 1.0"/>
    </material>

    <material name="brown">
        <color rgba="${222/255} ${207/255} ${195/255} 1.0"/>
    </material>

    <material name="yellow">
        <color rgba="1 1 0.2 1" />
    </material>

    <material name="black">
        <color rgba="0.2 0.2 0.2 1" />
    </material>

    <material name="gray">
        <color rgba="0.4 0.4 0.4 1" />
    </material>

    <material name="white">
        <color rgba="0.7 0.7 0.7 1" />
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1" />
    </material>

    <material name="red">
        <color rgba="1 0.2 0.2 1" />
    </material>

    <material name="green">
        <color rgba="0.2 1 0.2 1" />
    </material>

    <material name="teal">
        <color rgba="0.2 0.8 1 1" />
    </material>

    <material name="magenta">
        <color rgba="0.8 0.2 0.8 1" />
    </material>

  <!-- XACRO Constants -->
    <xacro:property name="roomba_wheel_radius" value="0.035" />
    <xacro:property name="roomba_wheel_separation" value="0.218" />
    <xacro:property name="roomba_wheel_height_offset" value="0.01" />
    <xacro:property name="roomba_wheel_thickness" value="0.015" />
    <xacro:property name="roomba_wheel_weight" value="0.1" />
    <xacro:property name="caster_wheel_radius" value="0.024" />
    <xacro:property name="caster_wheel_weight" value="0.026" />
    <xacro:property name="caster_wheel_center_offset" value="0.14" />
    <xacro:property name="roomba_chassis_radius" value="0.17145" />
    <xacro:property name="roomba_chassis_height" value="0.075" />
    <xacro:property name="roomba_chassis_weight" value="1.81437" />

    <xacro:property name="payload_chassis_length" value="0.19" />
    <xacro:property name="payload_chassis_width" value="0.24" />
    <xacro:property name="payload_chassis_height" value="0.21" />
    <xacro:property name="payload_chassis_weight" value="3.4473" />


  <!-- Base Link (WORLD)-->
  <link name="base_link"></link>


 <!-- Roomba Chassis Link -->
    <joint name="roomba_chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="roomba_chassis"/>
        <origin xyz="0 0 -${roomba_wheel_height_offset}" rpy="0 0 0"/>
    </joint>
    <link name="roomba_chassis">
        <visual>
            <origin xyz ="0 0 ${roomba_chassis_height/2}"/>
            <geometry>
                <cylinder radius="${roomba_chassis_radius}" length="${roomba_chassis_height}"/>
            </geometry>
            <material name="gray"/>
        </visual>
        <collision>
            <origin xyz ="0 0 ${roomba_chassis_height/2}"/>
            <geometry>
                <cylinder radius="${roomba_chassis_radius}" length="${roomba_chassis_height}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${roomba_chassis_weight}" radius="${roomba_chassis_radius}" length="${roomba_chassis_height}">
            <origin xyz="0 0 ${roomba_chassis_height/2}" rpy= "0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="roomba_chassis">
        <material>Gazebo/White</material>
    </gazebo>

<!-- LEFT WHEEL Link -->
    <joint name="left_wheel_joint" type="continuous">
        <parent link="roomba_chassis"/>
        <child link="left_wheel"/>
        <origin xyz="0 ${roomba_wheel_separation/2} ${roomba_wheel_radius - roomba_wheel_height_offset}" rpy="-${pi/2} 0 0"/>
        <axis xyz="0 0 1"/>
    </joint>
    <link name="left_wheel">
        <visual>
            <geometry>
                <cylinder radius="${roomba_wheel_radius}" length="${roomba_wheel_thickness}"/>
            </geometry>
            <material name="yellow"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${roomba_wheel_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${roomba_wheel_weight}" radius="${roomba_wheel_radius}" length="${roomba_wheel_thickness}">
            <origin xyz="0 0 0" rpy= "0 0 0"/>
        </xacro:inertial_cylinder>
    </link>
    <gazebo reference="left_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>

<!-- RIGHT WHEEL Link -->
    <joint name="right_wheel_joint" type="continuous">
        <parent link="roomba_chassis"/>
        <child link="right_wheel"/>
        <origin xyz="0 -${roomba_wheel_separation/2} ${roomba_wheel_radius - roomba_wheel_height_offset}" rpy="${pi/2} 0 0"/>
        <axis xyz="0 0 -1"/>
    </joint>
    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder radius="${roomba_wheel_radius}" length="${roomba_wheel_thickness}"/>
            </geometry>
            <material name="magenta"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${roomba_wheel_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${roomba_wheel_weight}" radius="${roomba_wheel_radius}" length="${roomba_wheel_thickness}">
            <origin xyz="0 0 0" rpy= "0 0 0"/>
        </xacro:inertial_cylinder>
    </link>
    <gazebo reference="right_wheel">
        <material>Gazebo/Red</material>
    </gazebo>

<!-- CASTER WHEEL Link -->
    <joint name="caster_wheel_joint" type="fixed">
        <parent link="roomba_chassis"/>
        <child link="caster_wheel"/>
        <origin xyz="${caster_wheel_center_offset} 0 ${caster_wheel_radius - roomba_wheel_height_offset}"/>
    </joint>
    <link name="caster_wheel">
        <visual>
            <geometry>
                <sphere radius="${caster_wheel_radius}"/>
            </geometry>
            <material name="red"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${caster_wheel_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="${caster_wheel_weight}" radius="${caster_wheel_radius}">
            <origin xyz="0 0 0" rpy= "0 0 0"/>
        </xacro:inertial_sphere>
    </link>
    <gazebo reference="caster_wheel">
        <material>Gazebo/Blue</material>
        <mu1 value="0.001"/>
        <mu2 value="0.001"/>
    </gazebo>

 <!-- Payload Chassis Link -->
    <joint name="payload_chassis_joint" type="fixed">
        <parent link="roomba_chassis"/>
        <child link="payload_chassis"/>
        <origin xyz="-${payload_chassis_length/2} 0 ${roomba_chassis_height}" rpy="0 0 0"/>
    </joint>
    <link name="payload_chassis">
        <visual>
            <origin xyz ="${payload_chassis_length/2} 0 ${payload_chassis_height/2}"/>
            <geometry>
                <box size="${payload_chassis_length} ${payload_chassis_width} ${payload_chassis_height}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz ="${payload_chassis_length/2} 0 ${payload_chassis_height/2}"/>
            <geometry>
                <box size="${payload_chassis_length} ${payload_chassis_width} ${payload_chassis_height}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass ="${payload_chassis_weight}" x="${payload_chassis_length}" y="${payload_chassis_width}" z="${payload_chassis_height}">
            <origin xyz ="${payload_chassis_length/2} 0 ${payload_chassis_height/2}" rpy = "0 0 0"/>
        </xacro:inertial_box>
    </link>
    <gazebo reference="payload_chassis">
        <material>Gazebo/Green</material>
    </gazebo>

</robot>